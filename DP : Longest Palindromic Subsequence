import java.util.* ;
import java.io.*; 
public class Solution {
	public static int longestPalindromeSubsequence(String str) {
		// Write your code here.
		StringBuilder s1 = new StringBuilder(str);
		String str1 = s1.reverse().toString();
		int n = str.length();
		int m = str1.length();
		int [][]dp = new int[n+1][m+1];
		 // base case 
		for(int i=0;i<=n;i++)
		 	dp[i][0] = 0;
		for(int j=0;j<=m;j++)
			dp[0][j] = 0;
		
		// recurrance
		for(int i=1;i<=n;i++){
			for(int j=1;j<=m;j++){
				if(str.charAt(i-1) == str1.charAt(j-1))
					dp[i][j] = 1+dp[i-1][j-1];
				else
					dp[i][j] = Math.max(dp[i-1][j],dp[i][j-1]);
			}
		}
		return dp[n][m];
	}
}
