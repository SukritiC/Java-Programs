import java.util.* ;
import java.io.*; 


public class Solution {
    static int prime = (int)(Math.pow(10,9)+7);
    static int calc(int i, int j, String s, String t, int [][]dp){
        if(j<0) return 1;
        if(i<0) return 0;
        if(dp[i][j] != -1) return dp[i][j];
        if(s.charAt(i) == t.charAt(j))
            return dp[i][j] = (calc(i-1, j-1, s, t, dp) + calc(i-1, j, s, t, dp))%prime;
        return dp[i][j] = calc(i-1, j, s, t, dp);
    }
    public static int subsequenceCounting(String t, String s, int lt, int ls) {
        // Write your code here..
        int dp[][] = new int[lt][ls];
        for(int rows[]:dp)
            Arrays.fill(rows, -1);
        return calc(lt-1, ls-1, t, s, dp);
    }

}
