import java.util.*;
class TreeNode{
int data;
TreeNode left;
TreeNode right;
TreeNode(){}
TreeNode(int data){this.data = data;}
TreeNode(int data, TreeNode left, TreeNode right){
	this.data = data;
	this.left = left;
	this.right = right;
	}
}
public class Solution{
    public int maxPath(TreeNode root, int [] maxi){
        if(root == null)
            return 0;
        int left_H = Math.max(0, maxPath(root.left, maxi));
        int right_H = Math.max(0, maxPath(root.right, maxi));
        maxi[0] = Math.max(maxi[0], left_H + right_H + root.data);
        
        return root.data + Math.max(left_H, right_H);
	
    }
    public static void main(String ar[]){
    	TreeNode root = new TreeNode(1);
    	root.left = new TreeNode(2);
    	root.right = new TreeNode(3);
    	root.right.left = new TreeNode(4);
    	root.right.left.left = new TreeNode(5);
    	root.right.right = new TreeNode(6);
    	root.right.right.left = new TreeNode(7);
    	root.right.right.left.left = new TreeNode(8);
    	int [] maxi = new int[1];
    	new Solution().maxPath(root,maxi);
    	System.out.println(maxi[0]);
   
    }
}
