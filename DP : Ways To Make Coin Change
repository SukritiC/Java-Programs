import java.util.*;
public class Solution {
	static long calc(int i, int t, int []num, long [][]dp){
		if(i == 0){
			if(t%num[i] == 0)
				return 1;
			return 0;
		}
		if(dp[i][t] != -1)
			return dp[i][t];
		long n_pick = calc(i-1, t, num, dp);
		long pick = 0;
		if(num[i] <= t)
			pick = calc(i,t-num[i], num, dp);
		return dp[i][t] = pick + n_pick;
	}
	public static long countWaysToMakeChange(int denominations[], int value){
        //write your code here			
		int n = denominations.length;
		long [][]dp = new long[n][value+1];
		for(long rows[]:dp)
			Arrays.fill(rows, -1);
		return calc(n-1, value, denominations, dp);
	}
	
}
