import java.util.* ;
import java.io.*; 
public class Solution {
    static int longestPalindromic(String s)
    {
        StringBuilder sb = new StringBuilder(s);
        String t = sb.reverse().toString();
        int n = s.length();
        int m = t.length();
        int dp[][] = new int[n+1][m+1];

        // base case
        for(int i=0;i<n;i++)
            dp[i][0] = 0;
        for(int i=0;i<m;i++)
            dp[0][i] = 0;
        
        for(int i=1;i<=n;i++){
            for(int j=1;j<=m;j++){
                if(s.charAt(i-1) == t.charAt(j-1))
                    dp[i][j] = 1 + dp[i-1][j-1];
                else
                    dp[i][j] = Math.max(dp[i-1][j],dp[i][j-1]);
            }
        }
        return dp[n][m];

    }
    public static int minInsertion(String str) {
    	// Write your code here.
        return str.length() - longestPalindromic(str);
    }
}
