import java.util.*;
public class Solution {
    static int calc(int i,int j, String s1, String s2,int [][]dp){
        if(j<0)
            return i+1;
        if(i<0)
            return j+1;
        if (dp[i][j] != -1) return dp[i][j];

        if(s1.charAt(i) == s2.charAt(j))
            return dp[i][j] = 0 + calc(i-1, j-1, s1, s2, dp);
        int insert = 1 + calc(i, j-1, s1, s2, dp);
        int delete = 1 + calc(i-1, j, s1, s2, dp);
        int replace = 1 + calc(i-1, j-1, s1, s2, dp);
        return dp[i][j] = Math.min(insert, Math.min(delete,replace));
    }
    public static int editDistance(String str1, String str2) {
        //Your code goes here
        int n = str1.length();
        int m = str2.length();
        int [][]dp = new int[n][m];
        for(int []rows:dp)
            Arrays.fill(rows,-1);
        return calc(n-1,m-1,str1,str2,dp);
    }
}
